==40== Memcheck, a memory error detector
==40== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==40== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==40== Command: ../bin/weight4tfa -h
==40== 
--40-- Valgrind options:
--40--    --leak-check=full
--40--    --track-origins=yes
--40--    -v
--40-- Contents of /proc/version:
--40--   Linux version 4.9.41-moby (root@11fbdc1f630f) (gcc version 6.2.1 20160822 (Alpine 6.2.1) ) #1 SMP Wed Sep 6 00:05:16 UTC 2017
--40-- 
--40-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-sse3-avx
--40-- Page sizes: currently 4096, max supported 4096
--40-- Valgrind library directory: /usr/lib64/valgrind
--40-- Reading syms from /valgrind_debugging/weight4tfa_pack/bin/weight4tfa
--40-- Reading syms from /usr/lib64/ld-2.17.so
--40-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--40--    object doesn't have a symbol table
--40--    object doesn't have a dynamic symbol table
--40-- Scheduler: using generic scheduler lock implementation.
--40-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==40== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-40-by-???-on-166672eefb48
==40== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-40-by-???-on-166672eefb48
==40== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-40-by-???-on-166672eefb48
==40== 
==40== TO CONTROL THIS PROCESS USING vgdb (which you probably
==40== don't want to do, unless you know exactly what you're doing,
==40== or are doing some strange experiment):
==40==   /usr/lib64/valgrind/../../bin/vgdb --pid=40 ...command...
==40== 
==40== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==40==   /path/to/gdb ../bin/weight4tfa
==40== and then give GDB the following command
==40==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=40
==40== --pid is optional if only one valgrind process is running
==40== 
--40-- REDIR: 0x4019200 (ld-linux-x86-64.so.2:strlen) redirected to 0x38056d91 (???)
--40-- REDIR: 0x4018fd0 (ld-linux-x86-64.so.2:index) redirected to 0x38056dab (???)
--40-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--40-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
==40== WARNING: new redirection conflicts with existing -- ignoring it
--40--     old: 0x04019200 (strlen              ) R-> (0000.0) 0x38056d91 ???
--40--     new: 0x04019200 (strlen              ) R-> (2007.0) 0x04c2ba90 strlen
--40-- REDIR: 0x4019180 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c2cbe0 (strcmp)
--40-- REDIR: 0x4019d70 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c2fc20 (mempcpy)
--40-- Reading syms from /usr/lib64/libm-2.17.so
--40-- Reading syms from /usr/local/lib/libz.so.1.2.10
--40-- Reading syms from /usr/lib64/libc-2.17.so
--40-- REDIR: 0x53daec0 (libc.so.6:strcasecmp) redirected to 0x4a237b0 (_vgnU_ifunc_wrapper)
--40-- REDIR: 0x53d7c40 (libc.so.6:strnlen) redirected to 0x4a237b0 (_vgnU_ifunc_wrapper)
--40-- REDIR: 0x53dd190 (libc.so.6:strncasecmp) redirected to 0x4a237b0 (_vgnU_ifunc_wrapper)
--40-- REDIR: 0x53da6a0 (libc.so.6:memset) redirected to 0x4a237b0 (_vgnU_ifunc_wrapper)
--40-- REDIR: 0x53da650 (libc.so.6:memcpy@GLIBC_2.2.5) redirected to 0x4a237b0 (_vgnU_ifunc_wrapper)
--40-- REDIR: 0x53d9630 (libc.so.6:__GI_strrchr) redirected to 0x4c2b450 (__GI_strrchr)
--40-- REDIR: 0x53da700 (libc.so.6:__GI_memset) redirected to 0x4c2ee80 (memset)
--40-- REDIR: 0x53d7b60 (libc.so.6:__GI_strlen) redirected to 0x4c2b9f0 (__GI_strlen)
--40-- REDIR: 0x53da870 (libc.so.6:__GI_mempcpy) redirected to 0x4c2f950 (__GI_mempcpy)
--40-- REDIR: 0x53d1370 (libc.so.6:free) redirected to 0x4c29c56 (free)
==40== 
==40== HEAP SUMMARY:
==40==     in use at exit: 0 bytes in 0 blocks
==40==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==40== 
==40== All heap blocks were freed -- no leaks are possible
==40== 
==40== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==40== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
